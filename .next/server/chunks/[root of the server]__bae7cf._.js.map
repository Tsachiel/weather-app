{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Tsachiel/Desktop/interviews%20prep/NEXTJS/rsn-app/app/api/weather/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nexport async function GET(req: Request) {\r\n  try {\r\n    const url = new URL(req.url);\r\n    const city = url.searchParams.get(\"city\");\r\n\r\n    if (!city) {\r\n      return NextResponse.json({ error: \"City parameter is required\" }, { status: 400 });\r\n    }\r\n\r\n    const apiKey = process.env.NEXT_PUBLIC_WEATHER_API_KEY;\r\n    if (!apiKey) {\r\n      return NextResponse.json({ error: \"Missing API Key\" }, { status: 500 });\r\n    }\r\n\r\n    const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n\r\n    const response = await fetch(weatherUrl);\r\n    if (!response.ok) throw new Error(`Failed to fetch weather data: ${response.statusText}`);\r\n\r\n    const data = await response.json();\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error(\"Error in API:\", error);\r\n    if (error instanceof Error) {\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    } else {\r\n      return NextResponse.json({ error: \"An unknown error occurred\" }, { status: 500 });\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG;QAC3B,MAAM,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC;QAElC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAClF;QAEA,MAAM;QACN,uCAAa;;QAEb;QAEA,MAAM,aAAa,CAAC,kDAAkD,EAAE,KAAK,OAAO,EAAE,OAAO,aAAa,CAAC;QAE3G,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,SAAS,UAAU,EAAE;QAExF,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,IAAI,iBAAiB,OAAO;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACjF;IACF;AACF"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}